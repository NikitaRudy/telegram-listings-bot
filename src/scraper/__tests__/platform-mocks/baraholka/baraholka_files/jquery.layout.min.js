(function (a) {
    a.fn.onlinerplaceholder = function () {
        return this.each(function () {
            var b = a(this);
            if (b.attr("title").length == 0)return this;
            b.data("value", b.attr("title")).removeAttr("title");
            b.attr("type") == "password" && b.wrap('<div class="pasws" />').after('<span class="pass-value">' + b.data("value") + "</span>");
            if (b.val() == "" || b.val() == b.data("value")) {
                b.addClass("noactive__ip");
                b.attr("type") != "password" && b.val(b.data("value"))
            }
            b.bind({focus: function () {
                if (b.val() == "" || b.val() == b.data("value"))b.removeClass("noactive__ip").val("")
            },
                blur: function () {
                    if (b.val() == "" || b.val() == b.data("value"))b.addClass("noactive__ip").val(b.data("value"))
                }})
        })
    }
})(jQuery);
window.Modernizr = function (a, b) {
    function d(h, j) {
        var l = h.charAt(0).toUpperCase() + h.substr(1), n;
        a:{
            l = [h, "webkit" + l, "Moz" + l, "moz" + l, "o" + l, "ms" + l];
            for (var o in l)if (g[l[o]] !== undefined && (!j || j(l[o]))) {
                n = true;
                break a
            }
        }
        return!!n
    }

    var c = {}, e = b.documentElement, f = b.createElement("modernizr"), g = f.style;
    f = b.createElement("input");
    " -o- -moz- -ms- -webkit- ".split(" ");
    f = {};
    var k, m = [];
    f.borderradius = function () {
        return d("borderRadius", "", function (h) {
            return h.indexOf("orderRadius") !== -1
        })
    };
    f.boxshadow = function () {
        return d("boxShadow")
    };
    for (k in f)if (f.hasOwnProperty(k))m.push((!(c[k] = f[k]()) ? "no-" : "") + k);
    g.cssText = "";
    f = f = null;
    c._enableHTML5 = true;
    c._enableNoClasses = true;
    c._version = "1.1";
    (function (h, j) {
        h[j] = h[j].replace(/\bno-js\b/, "js")
    })(e, "className");
    e.className += " " + m.join(" ");
    return c
}(this, this.document);

function number_format(a, b) {
    var d = jQuery.extend({numberOfDecimals: 2, decimalSeparator: ",", thousandSeparator: ".", symbol: ""}, b), c = a, e = d.numberOfDecimals, f = d.decimalSeparator, g = d.thousandSeparator, k = d.symbol, m = "", h = c.toString(), j = h.indexOf("e");
    if (j > -1) {
        m = h.substring(j);
        c = parseFloat(h.substring(0, j))
    }
    if (e != null) {
        h = Math.pow(10, e);
        c = Math.round(c * h) / h
    }
    h = c < 0 ? "-" : "";
    j = (c > 0 ? Math.floor(c) : Math.abs(Math.ceil(c))).toString();
    c = c.toString().substring(j.length + h.length);
    f = f != null ? f : ".";
    c = e != null && e > 0 || c.length >
        1 ? f + c.substring(1) : "";
    if (e != null && e > 0) {
        i = c.length - 1;
        for (z = e; i < z; ++i)c += "0"
    }
    g = g != f || c.length == 0 ? g : null;
    if (g != null && g != "")for (i = j.length - 3; i > 0; i -= 3)j = j.substring(0, i) + g + j.substring(i);
    return d.symbol == "" ? h + j + c + m : k + " " + h + j + c + m
};
var charset = document.characterSet;
if (charset === undefined)charset = document.charset;
charset = charset.toLowerCase() == "utf-8" ? "utf8" : "cp1251";

$(document).ready(function () {
    $.geo.show()
});
$.geo = {charset: "utf8", rus_vocabulary: [], show: function () {
    var a = $("#s_charset").val();
    if (a === "cp1251") this.charset = "cp1251";
    $(".msgpost-maps-hd").live("click", function () {
        var b = $(this), d = b.closest("div.msgpost-maps"), c = b.attr("doc");
        if (d.hasClass("msgpost-maps-open")) {
            b.text($.geo.rus_vocabulary[$.geo.charset].show_on_map);
            d.removeClass("msgpost-maps-open")
        } else {
            b.text($.geo.rus_vocabulary[$.geo.charset].hide_map);
            d.addClass("msgpost-maps-open");
            $("div.msgpost-maps-viewer", d).html('<iframe src="/gapi/geo/point/' +
                c + '" width="100%" height="500" scrolling="no"  frameborder="0" ></iframe>')
        }
        return false
    })
}};
charset = document.characterSet;
if (charset === undefined)charset = document.charset;
charset = charset.toLowerCase() == "utf-8" ? "utf8" : "cp1251";
document.write('<script type="text/javascript" src="' + document.location.protocol + '//gc.onliner.by/js/old-content/jquery.geo_voc-' + charset + '.js"><\/script>');
$.geo.rus_vocabulary.utf8 = [];
$.geo.rus_vocabulary.utf8.show_on_map = "Посмотреть на карте";
$.geo.rus_vocabulary.utf8.hide_map = "Спрятать карту";
$.geo.rus_vocabulary.cp1251 = [];
$.geo.rus_vocabulary.cp1251.show_on_map = "���������� �� �����";
$.geo.rus_vocabulary.cp1251.hide_map = "������ �����";
var ONotice = {notify: function (a, b, d) {
    if (b != 0)b = b || 5;
    this.remove();
    a = $('<div id="ONotice">' + a + "</div>").appendTo("body");
    d && a.css(d);
    b > 0 && setTimeout(this.remove, b * 1E3)
}, error: function (a, b) {
    this.notify(a, b, {backgroundColor: "#f00"})
}, remove: function () {
    $("#ONotice").remove()
}, isset: function () {
    return document.getElementById("ONotice")
}};
